[user]
    name = Sam Carlton
    email = sam.crltn@gmail.com

[credential]
    helper = osxkeychain

[diff]
    algorithm = patience
    tool = diffmerge

[difftool "diffmerge"]
    cmd = diffmerge $LOCAL $REMOTE

[merge]
    tool = diffmerge

[mergetool]
    keepBackup = false

[mergetool "diffmerge"]
    cmd = diffmerge --merge --result=$MERGED $LOCAL $BASE $REMOTE
    trustExitCode = true

[branch]
    autosetuprebase = always

[pull]
    rebase = true

[push]
    default = simple

[fetch]
    prune = true

[rebase]
    autostash = true

[stash]
    showPatch = true

[alias]
    # Prelude
    wtf = log --pretty=format:"%C(auto,yellow)%h%C(auto)%d%C(auto,reset)\\ by\\ %C(auto,blue)%cn%C(auto,reset),\\ %C(auto,cyan)%ar%C(auto,reset)%n\\ %s%n" --stat

    # Diffing
    # useful as something to diff against
    null-sha = hash-object -t tree /dev/null
    diff-staged = diff --cached
    difftool-staged = difftool --cached
    wdiff-staged = diff --word-diff --cached
    diff-unstaged = diff
    difftool-unstaged = difftool
    wdiff-unstaged = diff --word-diff
    nevermind = !git reset --hard HEAD && git clean -d -f

    # Resolving
    discard = checkout --
    ours = "!f() { git checkout --ours -- $@ && git add -- $@; }; f"
    theirs = "!f() { git checkout --theirs -- $@ && git add -- $@; }; f"
    resolve = mergetool

    # Branching
    branches = branch --all -vv
    new-branch = checkout -b
    delete-branch-local = branch -d
    delete-local-branch = branch -d
    delete-branch-remote = "!f() { git push --delete \"$2\" \"$1\" ; }; f"
    delete-remote-branch = "!f() { git push --delete \"$2\" \"$1\" ; }; f"
    delete-merged-branches = "!f() { git branch --no-color --merged | grep -v '\\*' | grep -v master | grep -v develop | xargs -n 1 git branch -d -D; }; f"
    set-branch-head = branch -f

    # Stashing
    stashes = stash list
    stash-changes = stash save
    unstash = stash pop --index
    delete-stash = stash drop

    # Committing
    stage-patch = add --all -p
    stage-all = add --all
    stage-no-ws = !git diff --ignore-all-space | git apply --cached
    unstage = reset HEAD
    amend = commit --amend
    amend-author = commit --amend -C HEAD --author

    # Rebasing
    # Separate the two rather different uses of rebase
    rebase-against = rebase
    rebase-since = rebase -i

    # Contributing
    incoming = !git fetch && git wtf HEAD..HEAD@{u}
    outgoing = !git fetch && git wtf HEAD@{u}..HEAD
    push-to = "!f() { branchname=`git symbolic-ref -q --short HEAD`; git push \"$1\" \"$branchname\"; }; f"
    force-push-to = "!f() { branchname=`git symbolic-ref -q --short HEAD`; git push --force-with-lease \"$1\" \"$branchname\"; }; f"

    # Reporting
    stat = status --short
    today = diff @{yesterday}.. --stat
    authors = shortlog -sn
    graph = log --graph --decorate --pretty=oneline --abbrev-commit --all
    history = log --graph --decorate --pretty=oneline --abbrev-commit --all --stat
    sup = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order

    # Sharing
    server = daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true
